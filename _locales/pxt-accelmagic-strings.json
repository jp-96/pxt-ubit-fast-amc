{
  "AngleRPY.Azimuth": "Azimuth angle (derived from the yaw angle)",
  "AngleRPY.Azimuth|block": "Azimuth",
  "AngleRPY.Pitch": "Pitch angle (rotation around the Y-axis)",
  "AngleRPY.Pitch|block": "Pitch",
  "AngleRPY.Roll": "Roll angle (rotation around the X-axis)",
  "AngleRPY.Roll|block": "Roll",
  "AngleRPY.Yaw": "Yaw angle (rotation around the Z-axis)",
  "AngleRPY.Yaw|block": "Yaw",
  "accelmagic.angle|block": "Get Angle from Euler Angles %rpy angle %angleRPY",
  "accelmagic.conjugate|block": "Conjugate Quaternion %q",
  "accelmagic.decDeg|block": "Radians %radian to Decimal Degrees",
  "accelmagic.diff|block": "Difference of Quaternions %a and %b",
  "accelmagic.estimate|block": "Estimate Quaternion",
  "accelmagic.intDeg|block": "Radians %radian to Integer Degrees",
  "accelmagic.multiply|block": "Multiply Quaternions %a and %b",
  "accelmagic.normalize|block": "Normalize Quaternion %q",
  "accelmagic.quatAsArray|block": "Quaternion to Array %q",
  "accelmagic.quatFromRpy|block": "Create Quaternion from Euler Angles %rpy",
  "accelmagic.quatFrom|block": "Create Quaternion from Array %q",
  "accelmagic.quatRotationAngle|block": "Quaternion Rotation Angle %q",
  "accelmagic.quat|block": "Create Quaternion w %w x %x y %y z %z",
  "accelmagic.rad|block": "Degrees %degree to Radians",
  "accelmagic.rpyAsArray|block": "Euler Angles to Array %rpy",
  "accelmagic.rpyFromQuat|block": "Create Euler Angles from Quaternion %q",
  "accelmagic.rpyFrom|block": "Create Euler Angles from Array %rpy",
  "accelmagic.rpy|block": "Create Euler Angles roll %roll pitch %pitch yaw %yaw",
  "accelmagic.setAlpha|block": "Set Alpha %alpha",
  "accelmagic.updateAcc|block": "Update Acceleration X %x Y %y Z %z",
  "accelmagic.updateMag|block": "Update Magnetic force X %x Y %y Z %z",
  "accelmagic|block": "AccelMagiQ",
  "{id:category}Accelmagic": "Accelmagic",
  "{id:category}Accelmagicfamc_": "Accelmagicfamc_",
  "{id:group}EulerAngles": "EulerAngles",
  "{id:group}Quaternion": "Quaternion",
  "{id:group}Sensor": "Sensor"
}